{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["bigList","Array","map","name","faker","findName","email","internet","avatar","App","height","window","innerHeight","width","innerWidth","itemCount","length","itemSize","index","style","display","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAKMA,EAAU,YAAIC,MAAM,MAAOC,KAAI,iBAAO,CAC1CC,KAAMC,IAAMD,KAAKE,WACjBC,MAAOF,IAAMG,SAASD,QACtBE,OAAQJ,IAAMG,SAASC,aAGV,SAASC,IAUtB,OACE,cAAC,IAAD,CACEC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,WAAa,GAC3BC,UAAWf,EAAQgB,OACnBC,SAAU,GAJZ,SAVgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,sBAAKA,MAAK,2BAAOA,GAAU,CAAEC,QAAS,SAAtC,UACE,qBAAKC,IAAKrB,EAAQkB,GAAOV,OAAQc,IAAKtB,EAAQkB,GAAOf,KAAMU,MAAO,KAClE,8BACGb,EAAQkB,GAAOf,KADlB,MAC2BH,EAAQkB,GAAOZ,eChBhD,IAYeiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cfdd0f68.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { FixedSizeList } from \"react-window\";\nimport faker from \"faker\";\n\nconst bigList = [...Array(5000)].map(() => ({\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  avatar: faker.internet.avatar(),\n}));\n\nexport default function App() {\n  const renderRow = ({ index, style }) => (\n    <div style={{ ...style, ...{ display: \"flex\" } }}>\n      <img src={bigList[index].avatar} alt={bigList[index].name} width={50} />\n      <p>\n        {bigList[index].name} - {bigList[index].email}\n      </p>\n    </div>\n  );\n\n  return (\n    <FixedSizeList\n      height={window.innerHeight}\n      width={window.innerWidth - 20}\n      itemCount={bigList.length}\n      itemSize={50}\n    >\n      {renderRow}\n    </FixedSizeList>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}